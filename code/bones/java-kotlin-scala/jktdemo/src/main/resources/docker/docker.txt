mysql:

docker run -d  -e MYSQL_ROOT_PASSWORD=123456  -p 3306:3306 --name mysql     --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci mysql

etcd:

# https://www.codercto.com/a/90804.html

docker run -d -p 2379:2379  -p 2380:2380  -p 4001:4001  -p 7001:7001  --name etcd-discovery  elcolio/etcd:latest

docker run --name etcd-v3.0.9 -d -v /tmp/etcd/:/data  -p 2379:2379 -p 2380:2380 --env ALLOW_NONE_AUTHENTICATION=yes xieyanze/etcd3:latest

nacos:
https://blog.51cto.com/12219995/2465134

xxl-job
https://www.cnblogs.com/xiao987334176/p/10298528.html
./doc/db/tables_xxl_job.sql

docker run -e PARAMS="--spring.datasource.url=jdbc:mysql://172.16.50.83:3306/xxl_job?Unicode=true&characterEncoding=UTF-8 --spring.datasource.username=root --spring.datasource.password=123456" -p 8080:8080 -v /tmp:/data/applogs --name xxl-job-admin -d xuxueli/xxl-job-admin:2.2.0

redis:
https://www.cnblogs.com/tiankx/p/14113333.html

docker run -d -p 6379:6379 --name redis redis

zookeeper:
docker run -d --name zookeeper -p 2181:2181 zookeeper:3.5.7

kafka:
docker run -d --name kafka --publish 9092:9092 --link zookeeper --env KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 --env KAFKA_ADVERTISED_HOST_NAME=192.168.4.126 --env KAFKA_ADVERTISED_PORT=9092  wurstmeister/kafka:2.12-2.5.0
docker run -d --name kafka-manager --link zookeeper:zookeeper --link kafka:kafka -p 9000:9000 --restart=always --env ZK_HOSTS=zookeeper:2181 sheepkiller/kafka-manager

rabbitmq:
docker run -d --name rabbitmq3.7.7 -p 5672:5672 -p 15672:15672  -e RABBITMQ_DEFAULT_VHOST=my_vhost  -e RABBITMQ_DEFAULT_USER=admin -e RABBITMQ_DEFAULT_PASS=admin rabbitmq:3.7.7-management

jrebel:
docker pull ilanyu/golang-reverseproxy

docker run -d --name reverse -p 8888:8888 ilanyu/golang-reverseproxy

docker run -d -p 3000:3000 --name=grafana grafana/grafana

## https://www.jianshu.com/p/71db312807c7

docker run -d -h myhbase -p 2181:2181 -p 8080:8080 -p 8085:8085 -p 9090:9090 -p 9095:9095  -p 16000:16000 -p 16010:16010  -p 16201:16201 -p 16301:16301 --name hbase1.3 harisekhon/hbase:1.3

 http://127.0.0.1:16010/master-status

hdfs:
docker run -p 22022:22 -p 8020:8020 -p 50010:50010 -p 50020:50020 -p 50070:50070 -p 50075:50075 -d mdouchement/hdfs

http://127.0.0.1:50070/

hive:

https://segmentfault.com/a/1190000010976995

https://github.com/big-data-europe/docker-hive

docker run -d --name hadoop-master -P -h hadoop-master teradatalabs/cdh5-hive

hdfs 权限问题：
https://my.oschina.net/u/3197158/blog/1492629
su hdfs
hdfs dfs -chmod 777 /


influx:

docker run -d -p 8083:8083 -p8086:8086 --expose 8090 --expose 8099 --name influxDbService influxdb

hbase:

docker run -d -h base-server  -p 2181:2181  -p 8080:8080  -p 8085:8085  -p 9090:9090  -p 9000:9000  -p 9095:9095  -p 16000:16000  -p 16010:16010  -p 16201:16201  -p 16301:16301  -p 16020:16020   --name hbase  harisekhon/hbase

rancher:


sudo docker run --privileged -d --restart=unless-stopped -p 80:80 -p 443:443 -v /var/lib/rancher/:/var/lib/rancher/ rancher/rancher:stable

http://localhost:80/

nginx:

docker run --name nginx -d -p 80:80 -v /Users/gaodi/data/ds/web/nginx/conf/nginx.conf:/etc/nginx/nginx.conf -v /Users/gaodi/data/ds/web/nginx/log:/var/log/nginx -v /Users/gaodi/data/ds/web/nginx/html:/usr/share/nginx/html nginx

spark:
https://www.dazhuanlan.com/2019/12/11/5df0a648c3c50/









